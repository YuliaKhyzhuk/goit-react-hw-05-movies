{"version":3,"file":"static/js/186.0b4c4830.chunk.js","mappings":"kOAwDA,UAlDgB,WACZ,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KAwBE,OAtBFC,EAAAA,EAAAA,YAAU,WACN,GAAKN,EAAL,CAEA,IAAMO,EAAsB,mCAAG,WAAMP,GAAN,uFAE3BG,GAAa,GAFc,UAGJK,EAAAA,EAAAA,IAAgBR,GAHZ,OAGrBS,EAHqB,OAK3BV,EAAgBU,EAASC,SALE,gDAO3BL,EAAS,KAAMM,SACfC,QAAQC,IAAI,mBAAoB,KAAMF,SARX,yBAU3BR,GAAa,GAVc,4EAAH,sDAa5BI,EAAuBP,EAfH,CAgBrB,GAAE,CAACA,IAEJY,QAAQC,IAAIb,GACZY,QAAQC,IAAI,gBAAiBf,IAG3B,2BACGI,IAAa,SAAC,IAAD,IAEbE,IAAS,mEAEe,IAAxBN,EAAagB,SAAgB,6CAC9B,wBACGhB,EAAagB,OAAS,GAAKhB,EAAaiB,KAAI,SAAAC,GACzC,OACI,2BACI,wCAAgBA,EAAOC,WACvB,uBAAID,EAAOE,YAFNF,EAAOG,GAKvB,QAKZ,C,+LCpDDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCACVC,EAAW,QAEJC,EAAiB,mCAAG,sGACRH,EAAAA,EAAAA,IAAA,sBAAiC,CACtDI,OAAQ,CAAEC,QAASJ,EAASK,SAAUJ,KAFT,cACzBb,EADyB,OAK/BG,QAAQC,IAAI,qBAAsBJ,GAC1BkB,EAASlB,EAATkB,KANuB,kBAQxBA,GARwB,2CAAH,qDAWjBC,EAAe,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACJV,EAAAA,EAAAA,IAAA,gBAA2B,CAChDI,OAAQ,CAAEC,QAASJ,EAASK,SAAUJ,EAAUQ,KAAAA,EAAMD,MAAAA,KAF7B,cACrBpB,EADqB,OAK3BG,QAAQC,IAAI,yBAA0BJ,GAC9BkB,EAASlB,EAATkB,KANmB,kBAOpBA,GAPoB,2CAAH,sDAUfI,EAAY,mCAAG,WAAM/B,GAAN,yFACDoB,EAAAA,EAAAA,IAAA,iBAAoBpB,GAAW,CACpDwB,OAAQ,CAAEC,QAASJ,EAASK,SAAUJ,KAFhB,cAClBb,EADkB,OAKxBG,QAAQC,IAAI,yBAA0BJ,GAC9BkB,EAASlB,EAATkB,KANgB,kBAOjBA,GAPiB,2CAAH,sDAUZK,EAAe,mCAAG,WAAMhC,GAAN,yFACJoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,YAAuC,CAC5DwB,OAAQ,CAAEC,QAASJ,EAASK,SAAUJ,KAFb,cACrBb,EADqB,OAK3BG,QAAQC,IAAI,4BAA6BJ,GACjCkB,EAASlB,EAATkB,KANmB,kBAOpBA,GAPoB,2CAAH,sDAWfnB,EAAe,mCAAG,WAAMR,GAAN,yFACNoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,YAAuC,CAC5DwB,OAAQ,CAAEC,QAASJ,EAASK,SAAUJ,EAAUQ,KAAM,KAF3B,cACvBrB,EADuB,OAK7BG,QAAQC,IAAI,4BAA6BJ,GACjCkB,EAASlB,EAATkB,KANqB,kBAOtBA,GAPsB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/themoviedbApi.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/themoviedbApi';\n\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n    const [movieReviews, setMovieReviews] = useState([]);\n    const { movieId } = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (!movieId) return;\n    \n        const getMovieReviewsFromApi = async movieId => {\n          try {\n            setIsLoading(true);\n            const response = await getMovieReviews(movieId);\n            // setMovieById(response.results);\n            setMovieReviews(response.results);\n          } catch (error) {\n            setError(error.message);\n            console.log('getMovieReviews:', error.message);\n          } finally {\n            setIsLoading(false);\n          }\n        };\n        getMovieReviewsFromApi(movieId);\n      }, [movieId]);\n\n      console.log(movieId);\n      console.log(\"movieReviews:\", movieReviews);\n\n      return (\n        <div>\n          {isLoading && <Loader />}\n    \n          {error && <p>Something went wrong! Please try again!</p>}\n\n          {movieReviews.length === 0 && <p>No reviews found</p>}\n          <ul>\n            {movieReviews.length > 0 && movieReviews.map(review => {\n                return(\n                    <li key={review.id}>\n                        <h4>Review by: {review.author}</h4>\n                        <p>{review.content}</p>\n                    </li>\n                )\n            })}\n          </ul>\n        </div>\n      );\n    \n}\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f687d24021b781b06892bcf3760eb617';\nconst LANGUAGE = 'en-US';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`, {\n    params: { api_key: API_KEY, language: LANGUAGE, },\n  });\n\n  console.log('getTrendingMovies:', response);\n  const { data } = response;\n\n  return data;\n};\n\nexport const getMovieByQuery = async (query, page = 1) => {\n    const response = await axios.get(`/search/movie`, {\n      params: { api_key: API_KEY, language: LANGUAGE, page, query, },\n    });\n  \n    console.log('getMovieById response:', response);\n    const { data } = response;\n    return data;\n  };\n\nexport const getMovieById = async movieId => {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: { api_key: API_KEY, language: LANGUAGE},\n    });\n  \n    console.log('getMovieById response:', response);\n    const { data } = response;\n    return data;\n  };\n\nexport const getMovieCredits = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/credits`, {\n      params: { api_key: API_KEY, language: LANGUAGE, },\n    });\n  \n    console.log('getMovieCredits response:', response);\n    const { data } = response;\n    return data;\n  };\n\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY, language: LANGUAGE, page: 1 },\n  });\n\n  console.log('getMovieReviews response:', response);\n  const { data } = response;\n  return data;\n  // console.log(\"getMovieReviews data:\", data);\n  // console.log(data);\n};\n"],"names":["useState","movieReviews","setMovieReviews","movieId","useParams","isLoading","setIsLoading","error","setError","useEffect","getMovieReviewsFromApi","getMovieReviews","response","results","message","console","log","length","map","review","author","content","id","axios","API_KEY","LANGUAGE","getTrendingMovies","params","api_key","language","data","getMovieByQuery","query","page","getMovieById","getMovieCredits"],"sourceRoot":""}