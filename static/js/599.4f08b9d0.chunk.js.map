{"version":3,"file":"static/js/599.4f08b9d0.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","services/themoviedbApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ContainerMovieList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n  background-color: ${props => props.theme.colors.backgroundPrimary};\n  list-style-type: none;\n  @media (min-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n  }\n  @media (min-width: 1280px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\nexport const MovieListContainerItem = styled.li`\n  width: 90%;\n  padding: 5px;\n  border-radius: 2px;\n  font-weight: bald;\n\n  background-color: ${props => props.theme.colors.middleAccent};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  text-decoration: none;\n`;\n\nexport const MovieListTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n\n  text-shadow: ${props => {\n    return ` 0 1px 1px ${props.theme.colors.secondaryAccent}`;\n  }};\n`;\n\nexport const MovieListItemLink = styled(Link)`\n  font-size: 25px;\n  font-weight: bald;\n  color: ${props => props.theme.colors.primaryBlack}; ;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { MovieListTitle, ContainerMovieList, MovieListContainerItem, MovieListItemLink } from './MovieList.styled';\n\nexport const MovieList = ({ movies, title }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      {title && <MovieListTitle>{title}</MovieListTitle>}\n      <ContainerMovieList>\n        {movies?.length &&\n          movies.map(movie => {\n            return (\n              <MovieListContainerItem key={movie.id}>\n                <MovieListItemLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </MovieListItemLink>\n              </MovieListContainerItem>\n            );\n          })}\n      </ContainerMovieList>\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const SearchFormButton = styled.button`\n  padding: 6px;\n  font-weight: bold;\n  cursor: pointer;\n  font-size: 15px;\n  outline: none;\n  border-radius: ${props => props.theme.borderRadius.sm};\n  color: ${props => props.theme.colors.secondaryWhite};\n  background-color: ${props => props.theme.colors.secondaryAccent};\n  box-shadow: ${props => {\n    return ` 0 1px 3px ${props.theme.colors.secondaryAccent}`;\n  }};\n  transition: ${props => props.theme.transition};\n\n  &:hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n`;\n\nexport const SearchFormButtonLabelut = styled.span`\n  //   position: absolute;\n  //   width: 1px;\n  //   height: 1px;\n  //   padding: 0;\n  //   overflow: hidden;\n  //   clip: rect(0, 0, 0, 0);\n  //   white-space: nowrap;\n  //   clip-path: inset(50%);\n  //   border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\ndisplay: flex;\nflex-basis: calc(100% / 3 - 20px);\npadding: 8px;\nfont-size: 15px;\nfont-weight: bold;\ncursor: pointer;\ncolor: ${props => props.theme.colors.secondaryWhite};\nbackground-color: ${props => props.theme.colors.middleAccent};\nbox-shadow: 0px 0px 10px 0px ${props => props.theme.colors.secondaryWhite};\nborder: 3px solid ${props => props.theme.colors.primaryAccent};\nborder-radius: ${props => props.theme.borderRadius.sm};\ntransition: ${props => props.theme.transition};\n\n&:hover {\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  outline: none;\n  \n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabelut,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Please enter a query!');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const handleQueryChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchFormInput\n        type=\"text\"\n        name=\"query\"\n        value={query}\n        placeholder=\"Search movies\"\n        autoComplete=\"off\"\n        autoFocus\n        onChange={handleQueryChange}\n      />\n      <SearchFormButton type=\"submit\">\n        <SearchFormButtonLabelut>Search</SearchFormButtonLabelut>\n      </SearchFormButton>\n    </SearchForm>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from '../../services/themoviedbApi';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    const getMovieByQueryFromApi = async (query) => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieByQuery(query);\n        setMovies(response.results);\n      } catch (error) {\n        setError(error.message);\n        console.log('getMovieByQuery error:', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieByQueryFromApi(query);\n  }, [query]);\n\n  const handleSearchFormSubmit = query => {\n    // event.preventDefault();\n    // console.log('query on submit:', event.currentTarget.elements.query);\n    // setSearchParams({ query: query });\n    setSearchParams({ query });\n\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleSearchFormSubmit} />\n\n      {isLoading && <Loader />}\n\n      {error && <p>Something went wrong! Please try again!</p>}\n\n      {movies.length > 0 && <MovieList movies={movies}  />}\n\n      {query && movies.length === 0 && (\n        <p>No movies found! Please try another title! </p>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f687d24021b781b06892bcf3760eb617';\nconst LANGUAGE = 'en-US';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`, {\n    params: { api_key: API_KEY, language: LANGUAGE, },\n  });\n\n  console.log('getTrendingMovies:', response);\n  const { data } = response;\n\n  return data;\n};\n\nexport const getMovieByQuery = async (query, page = 1) => {\n    const response = await axios.get(`/search/movie`, {\n      params: { api_key: API_KEY, language: LANGUAGE, page, query, },\n    });\n  \n    console.log('getMovieById response:', response);\n    const { data } = response;\n    return data;\n  };\n\nexport const getMovieById = async movieId => {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: { api_key: API_KEY, language: LANGUAGE},\n    });\n  \n    console.log('getMovieById response:', response);\n    const { data } = response;\n    return data;\n  };\n\nexport const getMovieCredits = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/credits`, {\n      params: { api_key: API_KEY, language: LANGUAGE, },\n    });\n  \n    console.log('getMovieCredits response:', response);\n    const { data } = response;\n    return data;\n  };\n\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY, language: LANGUAGE, page: 1 },\n  });\n\n  console.log('getMovieReviews response:', response);\n  const { data } = response;\n  return data;\n  // console.log(\"getMovieReviews data:\", data);\n  // console.log(data);\n};\n"],"names":["ContainerMovieList","styled","props","theme","colors","backgroundPrimary","MovieListContainerItem","middleAccent","MovieListTitle","secondaryAccent","MovieListItemLink","Link","primaryBlack","MovieList","movies","title","location","useLocation","length","map","movie","to","id","state","from","SearchForm","SearchFormButton","borderRadius","sm","secondaryWhite","transition","SearchFormButtonLabelut","SearchFormInput","primaryAccent","Searchbar","onSubmit","useState","query","setQuery","event","preventDefault","trim","alert","type","name","value","placeholder","autoComplete","autoFocus","onChange","currentTarget","toLowerCase","Movies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","error","setError","setMovies","get","useEffect","getMovieByQueryFromApi","getMovieByQuery","response","results","message","console","log","Loader","axios","API_KEY","LANGUAGE","getTrendingMovies","params","api_key","language","data","page","getMovieById","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}